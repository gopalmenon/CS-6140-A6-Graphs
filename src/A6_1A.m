# Return a matrix raised to a power of 2function [new_matrix] = get_matrix_power(input_matrix, power_of_two)  # Base case for recursion  if power_of_two == 1    new_matrix = input_matrix;  else    matrix_half_way =  get_matrix_power(input_matrix, power_of_two/2);    new_matrix = matrix_half_way * matrix_half_way;  endif  end# Load transition matrixload ../data/M.dat;# Number of iterationst=1024;# Initial vectorq0 = zeros(size(M)(1),1);q0(1,1) = 1;transition_matrix_power = get_matrix_power(M, t);final_probability_vector = transition_matrix_power * q0;